import Head from 'next/head'
import Image from 'next/image'
// import styles from '../styles/Home.module.css'
import Layout from '../components/Layout'
import Link from 'next/link'
import { useRouter } from 'next/router'
import Columns from 'src/components/Tables/columns/laptop';
import TableLaptop from '@/components/Tables/TableLaptop'
import { useState } from 'react'
import { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';

//importar firebase
import firebaseApp from '../../firebase'
import { getFirestore, collection, addDoc, getDocs, doc, deleteDoc, getDoc, setDoc } from 'firebase/firestore'
import { async } from '@firebase/util'
import PdfBudget from '@/components/PDF/PdfBudget'
import { Button } from '@mui/material'

const db = getFirestore(firebaseApp)



export default function Home({ notebooks, cot, uti, tarj }) {

  const router = useRouter()

  const { columns } = Columns({ cot, uti });

  const [data, setData] = useState([]);

  const [open, setOpen] = useState(false);

  const handleExportEfectivo = (rows) => {
    // console.log(rows.map((row) => row.original))
    setOpen(true)
    setData(rows.map((row) => row.original))
    // router.push("/pdf")
    // csvExporter.generateCsv(rows.map((row) => row.original));
  };



  return (
    <Layout uti={uti} setOpen={setOpen}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="">
        {open ? (
          <PDFViewer style={{ width: "100%", height: "90vh" }}>
            <PdfBudget pdfData={data} cot={cot} uti={uti} tarj={tarj} />
          </PDFViewer>

          // <PDFDownloadLink
          //   document={<PdfBudget pdfData={data} />}
          //   fileName="Presupuesto Notebooks.pdf"
          // >
          //   <Button variant="info">Descargar PDF</Button>
          // </PDFDownloadLink>
        ) :
          <TableLaptop
            columns={columns}
            data={notebooks}
            handleExportEfectivo={handleExportEfectivo}
          />}
      </div>
    </Layout>
  )
}

export const getServerSideProps = async (context) => {
  const querySnapshot = await getDocs(collection(db, 'notebook'), collection(db, 'cotizacion'))
  const querySnapshotTwo = await getDocs(collection(db, 'cotizacion'))
  const querySnapshotTr = await getDocs(collection(db, 'margenes'))
  const querySnapshotF = await getDocs(collection(db, 'tarjetas'))

  const docs = []
  const cotizacion = []
  const margenes = []
  const tarjetas = []

  querySnapshot.forEach((doc) => {
    docs.push({ ...doc.data(), id: doc.id })
  })

  querySnapshotTwo.forEach((doc) => {
    cotizacion.push({ ...doc.data(), id: doc.id })
  })

  querySnapshotTr.forEach((doc) => {
    margenes.push({ ...doc.data(), id: doc.id })
  })

  querySnapshotF.forEach((doc) => {
    tarjetas.push({ ...doc.data(), id: doc.id })
  })

  return {
    props: {
      notebooks: docs,
      cot: cotizacion,
      uti: margenes,
      tarj: tarjetas
    }
  }
}